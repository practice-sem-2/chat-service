networks:
  backend:
    driver: bridge
    external: true
    name: backend

services:
  app:
    build:
      context: '.'
      dockerfile: 'Dockerfile.dev'
    env_file:
      - ".env"
    volumes:
      - .:/app
    ports:
      - 8080:80
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    image: 'postgres:12-alpine'
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - backend
    env_file:
      - ".env"

  migrate:
    image: migrate/migrate:latest
    volumes:
      - ./migrations:/migrations
    depends_on:
      - postgres
    networks:
      - backend
    env_file:
      - ".env"
    command: [ "-path", "/migrations", "-database", "${DB_DSN}?sslmode=disable", "up" ]
    deploy:
      replicas: 0

  rollback:
    image: migrate/migrate:latest
    volumes:
      - ./migrations:/migrations
    depends_on:
      - postgres
    networks:
      - backend
    env_file:
      - ".env"
    command: [ "-path", "/migrations", "-database", "${DB_DSN}?sslmode=disable", "down", "1" ]
    deploy:
      replicas: 0

  zookeeper:
    image: 'bitnami/zookeeper:3.5.7'
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - zookeeper:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend

  kafka-1:
    image: 'bitnami/kafka:2.5.0'
    container_name: kafka-1
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - backend

volumes:
  zookeeper: